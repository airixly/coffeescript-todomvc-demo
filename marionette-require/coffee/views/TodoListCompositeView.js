// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["marionette", "templates", "views/TodoItemView"], function(Marionette, templates, ItemView) {
    "use strict";
    var TodoListCompositeView, _ref;
    return TodoListCompositeView = (function(_super) {
      __extends(TodoListCompositeView, _super);

      function TodoListCompositeView() {
        _ref = TodoListCompositeView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      TodoListCompositeView.prototype.template = templates.todosCompositeView;

      TodoListCompositeView.prototype.itemView = ItemView;

      TodoListCompositeView.prototype.itemViewContainer = "#todo-list";

      TodoListCompositeView.prototype.ui = {
        toggle: "#toggle-all"
      };

      TodoListCompositeView.prototype.events = {
        "click #toggle-all": "onToggleAllClick"
      };

      TodoListCompositeView.prototype.initialize = function() {
        return this.listenTo(this.collection, "all", this.updateToggleCheckbox);
      };

      TodoListCompositeView.prototype.onRender = function() {
        return this.updateToggleCheckbox();
      };

      TodoListCompositeView.prototype.updateToggleCheckbox = function() {
        var allCompleted;
        allCompleted = this.collection.reduce(function(lastModel, thisModel) {
          return lastModel && thisModel.get("completed");
        }, true);
        return this.ui.toggle.prop("checked", allCompleted);
      };

      TodoListCompositeView.prototype.onToggleAllClick = function(event) {
        var isChecked;
        isChecked = event.currentTarget.checked;
        return this.collection.each(function(todo) {
          return todo.save({
            completed: isChecked
          });
        });
      };

      return TodoListCompositeView;

    })(Marionette.CompositeView);
  });

}).call(this);
