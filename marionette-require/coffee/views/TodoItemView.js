// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["marionette", "templates"], function(Marionette, templates) {
    "use strict";
    var ENTER_KEY, ESCAPE_KEY, TodoItemView, _ref;
    ENTER_KEY = 13;
    ESCAPE_KEY = 27;
    return TodoItemView = (function(_super) {
      __extends(TodoItemView, _super);

      function TodoItemView() {
        _ref = TodoItemView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      TodoItemView.prototype.tagName = "li";

      TodoItemView.prototype.template = templates.todoItemView;

      TodoItemView.prototype.value = "";

      TodoItemView.prototype.ui = {
        edit: ".edit"
      };

      TodoItemView.prototype.events = {
        "click .toggle": "toggle",
        "click .destroy": "destroy",
        "dblclick label": "onEditDblclick",
        "keypress .edit": "onEditKeypress",
        "blur .edit": "onEditBlur"
      };

      TodoItemView.prototype.initialize = function() {
        this.value = this.model.get("title");
        return this.listenTo(this.model, "change", this.render);
      };

      TodoItemView.prototype.onRender = function() {
        return this.$el.removeClass("active completed").addClass(this.model.get("completed") ? "completed" : "active");
      };

      TodoItemView.prototype.destroy = function() {
        return this.model.destroy();
      };

      TodoItemView.prototype.toggle = function() {
        return this.model.toggle().save();
      };

      TodoItemView.prototype.toggleEditingMode = function() {
        return this.$el.toggleClass("editing");
      };

      TodoItemView.prototype.onEditDblclick = function() {
        this.toggleEditingMode();
        return this.ui.edit.focus().val(this.value);
      };

      TodoItemView.prototype.onEditKeypress = function(event) {
        if (event.which === ENTER_KEY) {
          this.ui.edit.trigger("blur");
        }
        if (event.which === ESCAPE_KEY) {
          return this.toggleEditingMode();
        }
      };

      TodoItemView.prototype.onEditBlur = function(event) {
        this.value = event.target.value.trim();
        if (this.value) {
          this.model.set("title", this.value).save();
        } else {
          this.destroy();
        }
        return this.toggleEditingMode();
      };

      return TodoItemView;

    })(Marionette.CompositeView);
  });

}).call(this);
