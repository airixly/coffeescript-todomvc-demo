// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  TodoMVC.module("Layout", function(Layout, App, Backbone, Marionette, $, _) {
    var _ref, _ref1;
    Layout.Header = (function(_super) {
      __extends(Header, _super);

      function Header() {
        _ref = Header.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Header.prototype.template = "#template-header";

      Header.prototype.ui = {
        input: "#new-todo"
      };

      Header.prototype.events = {
        "keypress #new-todo": "onInputKeypress",
        "blur #new-todo": "onTodoBlur"
      };

      Header.prototype.onTodoBlur = function() {
        var todoText;
        todoText = this.ui.input.val().trim();
        return this.createTodo(todoText);
      };

      Header.prototype.onInputKeypress = function(e) {
        var ENTER_KEY, todoText;
        ENTER_KEY = 13;
        todoText = this.ui.input.val().trim();
        if (e.which === ENTER_KEY && todoText) {
          return this.createTodo(todoText);
        }
      };

      Header.prototype.completeAdd = function() {
        return this.ui.input.val("");
      };

      Header.prototype.createTodo = function(todoText) {
        if (todoText.trim() === "") {
          return;
        }
        this.collection.create({
          title: todoText
        });
        return this.completeAdd();
      };

      return Header;

    })(Backbone.Marionette.ItemView);
    return Layout.Footer = (function(_super) {
      __extends(Footer, _super);

      function Footer() {
        _ref1 = Footer.__super__.constructor.apply(this, arguments);
        return _ref1;
      }

      Footer.prototype.template = "#template-footer";

      Footer.prototype.ui = {
        todoCount: "#todo-count .count",
        todoCountLable: "#todo-count .lable",
        clearCount: "#clear-completed .count",
        filters: "#filters a"
      };

      Footer.prototype.events = {
        "click #clear-completed": "onClearClick"
      };

      Footer.prototype.initialize = function() {
        this.listenTo(App.vent, "todoList:filter", this.updateFilterSelection);
        return this.listenTo(this.collection, "all", this.updateCount);
      };

      Footer.prototype.onRender = function() {
        return this.updateCount;
      };

      Footer.prototype.updateCount = function() {
        var activeCount, completedCount;
        activeCount = this.collection.getActive().length;
        completedCount = this.collection.getCompleted().length;
        this.ui.todoCount.html(activeCount);
        this.ui.todoCountLable.html(activeCount === 1 ? "item" : "items");
        return this.ui.clearCount.html(completedCount === 0 ? "" : "(" + completedCount + ")");
      };

      Footer.prototype.updateFilterSelection = function(filter) {
        return this.ui.filters.removeClass("selected").filter("[href='#" + filter + "']").addClass("selected");
      };

      Footer.prototype.onClearClick = function() {
        var completed;
        completed = this.collection.getCompleted();
        return completed.forEach(function(todo) {
          return todo.destroy();
        });
      };

      return Footer;

    })(Backbone.Marionette.Layout);
  });

}).call(this);
